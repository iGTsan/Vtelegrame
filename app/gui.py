#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSignal, pyqtSlot
# from PyQt5.QtCore import (Qt, pyqtSignal)
import rsa
from rsa import blocksize
import socket
from app import conn_w_ip
from get_addr2 import *

PORT = 9090

class Ui_Form(object):
    def setupUi(self, Form, parent):
        Form.setObjectName("Form")
        Form.resize(400, 164)
        self.parent = parent
        self.Connect = QtWidgets.QPushButton(Form)
        self.Connect.setGeometry(QtCore.QRect(290, 60, 95, 41))
        self.Connect.setObjectName("Connect")
        self.Name = QtWidgets.QLineEdit(Form)
        self.Name.setGeometry(QtCore.QRect(90, 10, 191, 41))
        self.Name.setObjectName("Name")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(10, 20, 66, 19))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(10, 70, 66, 19))
        self.label_2.setObjectName("label_2")
        self.IP = QtWidgets.QLineEdit(Form)
        self.IP.setGeometry(QtCore.QRect(90, 60, 191, 41))
        self.IP.setObjectName("IP")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(10, 120, 66, 19))
        self.label_3.setObjectName("label_3")
        self.Port = QtWidgets.QLineEdit(Form)
        self.Port.setGeometry(QtCore.QRect(90, 110, 191, 41))
        self.Port.setObjectName("Port")
        self.Connect.clicked.connect(lambda: self.connect(Form))

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def connect(self, Form):
        name = self.Name.text()
        ip = self.IP.text()
        port = int(self.Port.text())
        self.conn_w_ip(name, ip, port,Form)


    def conn_w_ip(self, name, ip, port,Form):

        sock = socket.socket()

        try:
            sock.connect((ip, port))
            # self.parent.add_user(name, ip, sock)
            self.parent.name = name
            self.parent.ip = ip
            self.parent.sock = sock
            self.parent.my_signal.emit()
        except socket.error as exc:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("ERROR")
            msg.setInformativeText(str(exc))
            msg.setDetailedText("You may try again")
            msg.exec_()
        Form.close()
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.Connect.setText(_translate("Form", "Connect"))
        self.label.setText(_translate("Form", "Name"))
        self.label_2.setText(_translate("Form", "IP"))
        self.label_3.setText(_translate("Form", "Port"))


class Ui_MainWindow(QObject):
    my_signal = pyqtSignal()
    recv_signal = pyqtSignal()
    disconnect_sygnal = pyqtSignal()
    def setupUi(self, MainWindow):
        self.ip = '0'
        self.sock = 0
        self.name = 0
        a = Qserver(self)
        a.start()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(810, 607)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.grid = QtWidgets.QGridLayout()
        self.grid.setSpacing(10)
        self.centralwidget.setLayout(self.grid)
        # scroll area widget contents - layout
        self.scrollLayout = QtWidgets.QFormLayout()

        # scroll area widget contents
        self.scrollWidget = QtWidgets.QWidget()
        self.scrollWidget.setLayout(self.scrollLayout)

        # scroll area
        self.scrollArea = QtWidgets.QScrollArea()
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setWidget(self.scrollWidget)
        # self.scrollArea.setGeometry(QtCore.QRect(10, 50, 240, 530))
        self.grid.addWidget(self.scrollArea, 2, 1, 11, 2)
        self.textBrowser = QtWidgets.QTextBrowser()
        # self.textBrowser.setGeometry(QtCore.QRect(260, 50, 541, 451))
        self.textBrowser.setObjectName("textBrowser")
        self.grid.addWidget(self.textBrowser, 2, 3, 10, 5)
        self.radioButton = []
        self.Connect = QtWidgets.QPushButton()
        # self.Connect.setGeometry(QtCore.QRect(10, 10, 241, 35))
        self.Connect.setObjectName("Connect")
        self.grid.addWidget(self.Connect, 1, 1, 1, 2)
        self.Connect.clicked.connect(self.connect)
        self.Send = QtWidgets.QPushButton()
        # self.Send.setGeometry(QtCore.QRect(734, 514, 61, 51))
        self.Send.setObjectName("Send")
        self.grid.addWidget(self.Send, 12, 7, 1, 1)
        self.Send.clicked.connect(self.send_msg)
        self.Disconnect = QtWidgets.QPushButton()
        # self.Disconnect.setGeometry(QtCore.QRect(400, 10, 241, 35))
        self.Disconnect.setObjectName("Disconnect")
        self.grid.addWidget(self.Disconnect, 1, 3, 1, 5)
        self.Disconnect.clicked.connect(self.disconnect)
        self.Disconnect.setVisible(0)
        self.Send.setVisible(0)
        self.textEdit = QtWidgets.QTextEdit()
        # self.textEdit.setGeometry(QtCore.QRect(263, 506, 461, 71))
        self.textEdit.setObjectName("textEdit")
        self.grid.addWidget(self.textEdit, 12, 3, 1, 4)
        self.textEdit.setFixedHeight(50)
        # self.textEdit.setGeometry(QtCore.QRect(263, 506, 461, 71))
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        self.recv_signal.connect(self.update_win)
        self.my_signal.connect(self.add_user)
        self.disconnect_sygnal.connect(self.rem_user)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def connect(self):
        ip = self.ip
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.Form, self)
        self.Form.show()
    def add_user(self):
        name = self.name
        ip = self.ip
        sock = self.sock
        a = Qmain(sock, ip, self)
        a.start()
        self.qmain = a
        while self.ip!='0':
            pass
        self.ip = ip
        self.radioButton.append(QtWidgets.QRadioButton())
        self.radioButton[-1].setEnabled(True)
        self.radioButton[-1].clicked.connect(lambda: self.change_ip(ip,a))
        self.radioButton[-1].setObjectName(str(len(self.radioButton)) + "_user")
        _translate = QtCore.QCoreApplication.translate
        self.radioButton[-1].setText(_translate("MainWindow", name))
        self.scrollLayout.addRow(self.radioButton[-1])
        self.radioButton[-1].a = a
        

    def change_ip(self, ip,qmain):
        self.Send.setVisible(1)
        self.Disconnect.setVisible(1)
        self.ip = ip
        self.qmain = qmain
        self.update_win()

    def disconnect(self):
        self.qmain_to_delite = self.qmain

    def rem_user(self):
        for i in self.radioButton:
            if i.a == self.qmain_to_delite:
                i.a.sendd("/stop")
                self.scrollLayout.removeRow(i)
                self.radioButton.remove(i)
                self.Disconnect.setVisible(0)
                self.Send.setVisible(0)
                i.a.terminate()
                break

    def send_msg(self):
        newstr = self.textEdit.toPlainText() + "\n"
        with open(self.ip, "a") as f:
            f.write("ty:" + newstr)
        self.update_win()
        self.textEdit.clear()
        if self.ip!='0':
            self.qmain.sendd(newstr)
    def update_win(self):
        with open(self.ip, 'a'):
            pass
        with open(self.ip, "r") as f:
            self.textBrowser.setText(f.read())

    def new_msg(self, ip):
        if ip == self.ip:
            self.update_win()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Connect.setText(_translate("MainWindow", "Connect"))
        self.Send.setText(_translate("MainWindow", "Send"))
        self.Disconnect.setText(_translate("MainWindow", "Disconnect"))


class Qserver(QtCore.QThread):
    def __init__(self, mainwindow):
        super().__init__()
        self.sock = socket.socket()
        self.mainwindow = mainwindow

    def run(self):
        self.sock.bind(('', PORT))
        self.sock.listen(15)
        while 1:
            conn, addr = self.sock.accept()
            # print("New connection:", addr[0])
            f = addr[0]
            self.mainwindow.name = f
            self.mainwindow.ip = f
            self.mainwindow.sock = conn
            self.mainwindow.my_signal.emit()


class Qmain(QtCore.QThread):
    def __init__(self, sock, file, mainwindow):
        self.sock = sock
        self.file = file
        super().__init__()
        self.mainwindow = mainwindow
        try:
            f = open("keys")
        except:
            rsa.gen_keys()
            f = open("keys")
        finally:
            e, n, d = map(int, f.read().split('\n'))
        sock.send(e.to_bytes(blocksize, 'little', signed=False))
        e = int.from_bytes(sock.recv(blocksize), 'little', signed=False)
        sock.send(n.to_bytes(blocksize, 'little', signed=False))
        n2 = int.from_bytes(sock.recv(blocksize), 'little', signed=False)
        self.d=d
        self.n=n
        self.e = e
        self.n2=n2
    def run(self):
        self.mainwindow.ip = '0'
        self.recieve(self.sock, self.d, self.n, self.file, self.mainwindow)

    def recv_block(self, sock):
        n = 0
        data = bytearray(blocksize)
        while n < blocksize:
            data1 = bytearray(blocksize - n)
            n1, addr = sock.recvfrom_into(data1, blocksize - n)
            data[n:n + n1] = data1[:n1]
            n += n1
        return data

    def update_f(self, file, s, win):
        f = open(file, 'a')
        f.write(s + '\n')
        f.close()
        if win.ip==file:
            win.recv_signal.emit()

    def recieve(self, sock, d, n, file, win):
        while True:
            data = (1).to_bytes(blocksize, 'little', signed=False)
            message = []
            while int.from_bytes(data, 'little', signed=False) != n + 1:
                try:
                    data = self.recv_block(sock)
                except:
                    # print("Connection is closed")
                    return
                message.append(data)
            data = rsa.decode_rsa_s(message, d, n)
            if data == "/stop":
                self.mainwindow.qmain_to_delite = self
                self.mainwindow.disconnect_sygnal.emit()
                break

            self.update_f(file, "Ne ty:" + data, win)

    def sendd(self, s):
        sock, e, n = self.sock,self.e,self.n2
        s1 = rsa.encode_rsa_s(s, e, n)
        try:
            for i in s1:
                sock.send(i)
        except:
            # print("Connetion closed4")
            return


if __name__ == "__main__":
    import sys
    print("Your IP addres:", get_addr())
    print("Your port:", PORT)
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
